{"ast":null,"code":"import dayjs from 'dayjs';\nexport const useCalendar = () => {\n  const showDayJs = () => {\n    const now = dayjs();\n    console.log(now);\n    console.log(\"1. set minute - hh\", dayjs(now).format(\"YYYY.MM.DD hh:mm:ss a A\"), dayjs(now).get('month'));\n    console.log(dayjs(now).startOf('month').startOf('day').format('dd'));\n  };\n  const getCalendarColumns = now => {\n    //now는 페이지에서 함수 호출시 현재 시간을 만들어 전달\n    const start = dayjs(now).startOf('month');\n    const end = dayjs(now).endOf('month');\n    const endDate = dayjs(end).get('date'); // 마지막 날의 값을 받아옴 31 30 29 28 얘네가 배열의 크기 결정\n\n    console.log(start, end, endDate);\n    const columns = [];\n    for (let i = 0; i < endDate; i++) {\n      const date = dayjs(start).add(i, \"day\");\n      columns.push(date);\n    }\n    console.log(\"columns data  == \", columns);\n  };\n  return {\n    showDayJs,\n    getCalendarColumns\n  };\n};","map":{"version":3,"names":["dayjs","useCalendar","showDayJs","now","console","log","format","get","startOf","getCalendarColumns","start","end","endOf","endDate","columns","i","date","add","push"],"sources":["C:/Users/user/Desktop/project/dodolist/src/hooks/useCalendar.ts"],"sourcesContent":["import dayjs from 'dayjs'\r\n\r\nexport const useCalendar = () =>{\r\n   \r\n   const showDayJs = () =>{\r\n    const now = dayjs()\r\n    console.log(now)\r\n    console.log(\r\n        \"1. set minute - hh\",\r\n        dayjs(now).format(\"YYYY.MM.DD hh:mm:ss a A\"),\r\n        dayjs(now).get('month')\r\n    )\r\n    console.log(\r\n        dayjs(now).startOf('month').startOf('day').format('dd')\r\n    )\r\n   }\r\n   const getCalendarColumns = (now:any) => {\r\n    //now는 페이지에서 함수 호출시 현재 시간을 만들어 전달\r\n    const start = dayjs(now).startOf('month')\r\n    const end = dayjs(now).endOf('month')\r\n    const endDate = dayjs(end).get('date') // 마지막 날의 값을 받아옴 31 30 29 28 얘네가 배열의 크기 결정\r\n\r\n    console.log(start,end,endDate)\r\n\r\n    const columns = [];\r\n    for(let i =0; i< endDate; i++){\r\n        const date = dayjs(start).add(i,\"day\");\r\n        columns.push(date)\r\n    }\r\n    console.log(\"columns data  == \",columns)\r\n\r\n    \r\n   }\r\n    return{\r\n        showDayJs,\r\n        getCalendarColumns\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAK;EAE7B,MAAMC,SAAS,GAAGA,CAAA,KAAK;IACtB,MAAMC,GAAG,GAAGH,KAAK,CAAC,CAAC;IACnBI,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBC,OAAO,CAACC,GAAG,CACP,oBAAoB,EACpBL,KAAK,CAACG,GAAG,CAAC,CAACG,MAAM,CAAC,yBAAyB,CAAC,EAC5CN,KAAK,CAACG,GAAG,CAAC,CAACI,GAAG,CAAC,OAAO,CAC1B,CAAC;IACDH,OAAO,CAACC,GAAG,CACPL,KAAK,CAACG,GAAG,CAAC,CAACK,OAAO,CAAC,OAAO,CAAC,CAACA,OAAO,CAAC,KAAK,CAAC,CAACF,MAAM,CAAC,IAAI,CAC1D,CAAC;EACF,CAAC;EACD,MAAMG,kBAAkB,GAAIN,GAAO,IAAK;IACvC;IACA,MAAMO,KAAK,GAAGV,KAAK,CAACG,GAAG,CAAC,CAACK,OAAO,CAAC,OAAO,CAAC;IACzC,MAAMG,GAAG,GAAGX,KAAK,CAACG,GAAG,CAAC,CAACS,KAAK,CAAC,OAAO,CAAC;IACrC,MAAMC,OAAO,GAAGb,KAAK,CAACW,GAAG,CAAC,CAACJ,GAAG,CAAC,MAAM,CAAC,EAAC;;IAEvCH,OAAO,CAACC,GAAG,CAACK,KAAK,EAACC,GAAG,EAACE,OAAO,CAAC;IAE9B,MAAMC,OAAO,GAAG,EAAE;IAClB,KAAI,IAAIC,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAEF,OAAO,EAAEE,CAAC,EAAE,EAAC;MAC1B,MAAMC,IAAI,GAAGhB,KAAK,CAACU,KAAK,CAAC,CAACO,GAAG,CAACF,CAAC,EAAC,KAAK,CAAC;MACtCD,OAAO,CAACI,IAAI,CAACF,IAAI,CAAC;IACtB;IACAZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACS,OAAO,CAAC;EAGzC,CAAC;EACA,OAAM;IACFZ,SAAS;IACTO;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}